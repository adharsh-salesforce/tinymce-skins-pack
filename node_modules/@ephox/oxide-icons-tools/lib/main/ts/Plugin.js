"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.iconPackager = void 0;
const Optimize_1 = require("./core/Optimize");
const VerifyIds_1 = require("./core/VerifyIds");
const VerifySet_1 = require("./core/VerifySet");
const Configuration_1 = require("./Configuration");
const CreateFiles_1 = require("./core/CreateFiles");
const PluginError = require("plugin-error");
const stream_1 = require("stream");
const buffer = (transformStream) => {
    const svgs = [];
    transformStream._transform = (file, encoding, cb) => {
        if (file.isNull()) {
            return cb(undefined, file);
        }
        if (file.isStream()) {
            transformStream.emit('error', new PluginError(Configuration_1.default.pluginName, 'Streams not supported'));
            return cb();
        }
        svgs.push({
            name: file.stem,
            data: file.contents.toString('utf8')
        });
        cb();
    };
    return svgs;
};
const transform = (transformStream, svgs, rawOptions) => {
    const options = Configuration_1.default.getPluginOptions(rawOptions);
    transformStream._flush = (cb) => {
        const pSvgs = rawOptions.svgo === false ? Promise.resolve(svgs) : (0, Optimize_1.optimizeSvgs)(svgs, options.svgo);
        pSvgs.then((optimizedSvgs) => {
            (0, VerifyIds_1.verifyIds)(optimizedSvgs);
            if (options.diffDefault) {
                (0, VerifySet_1.verifySet)(optimizedSvgs, options.diffIgnore);
            }
            (0, CreateFiles_1.createFiles)(optimizedSvgs, options.name).forEach((file) => {
                transformStream.push(file);
            });
            cb();
        }).catch((err) => {
            transformStream.emit('error', new PluginError(Configuration_1.default.pluginName, err));
            cb();
        });
    };
};
const iconPackager = (options) => {
    const transformStream = new stream_1.Transform({ objectMode: true });
    const svgs = buffer(transformStream);
    transform(transformStream, svgs, options);
    return transformStream;
};
exports.iconPackager = iconPackager;
//# sourceMappingURL=Plugin.js.map