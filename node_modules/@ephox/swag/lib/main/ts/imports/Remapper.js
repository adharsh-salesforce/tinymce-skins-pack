"use strict";
exports.__esModule = true;
exports.remapImportsInSource = exports.createRemapper = void 0;
var Parser_1 = require("../ast/js/Parser");
var Remap_1 = require("../ast/js/Remap");
var Serializer_1 = require("../ast/js/Serializer");
var RemapCache_1 = require("../ast/RemapCache");
var CachedFileSystem_1 = require("../fs/CachedFileSystem");
var RawSourceParser_1 = require("./RawSourceParser");
var createRemapper = function (fs) {
    if (fs === void 0) { fs = (0, CachedFileSystem_1.getFileSystem)(); }
    var remapCache = (0, RemapCache_1.createRemapCache)();
    return function (code, id) {
        var program = (0, Parser_1.parse)(code);
        // This doesn't force flat mode since in webpack dev mode we want the user to be able
        // to just copy or symlink in a project and that could project could contain node_modules.
        // TODO: In the future we should probably ignore the package node_modules and favor the root node_modules
        (0, Remap_1.remap)(fs, remapCache, id, program, false);
        return (0, Serializer_1.serialize)(program);
    };
};
exports.createRemapper = createRemapper;
var remapImportsInSource = function (remapper, code, fullModulePath) {
    var imports = (0, RawSourceParser_1.parseImports)(code);
    var remappedImports = remapper((0, RawSourceParser_1.importsToText)(imports), fullModulePath);
    return {
        inputImports: imports,
        outputImportsCode: remappedImports
    };
};
exports.remapImportsInSource = remapImportsInSource;
