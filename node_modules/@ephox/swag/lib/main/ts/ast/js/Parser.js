"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
exports.__esModule = true;
exports.parse = void 0;
var acorn = __importStar(require("acorn"));
var parse = function (code) {
    var program = acorn.parse(code, {
        ecmaVersion: 2021,
        sourceType: 'module',
        preserveParens: false,
        ranges: false
    });
    // This is causing "Type 'Node' is missing the following properties from type 'Program': sourceType, body"
    // however the type returned by acorn.parse is `Program` so it shouldn't be doing that. As such this seems
    // like an issue with the types, so just ignore it for now.
    // eslint-disable-next-line @typescript-eslint/ban-ts-comment
    // @ts-ignore
    return program;
};
exports.parse = parse;
