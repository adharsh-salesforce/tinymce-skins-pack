import { Reporter } from '@ephox/bedrock-common';
export var Ui = function (container) {
    var stopOnFailure = false;
    var ui;
    var current;
    var restartBtn;
    var retryBtn;
    var skipBtn;
    var render = function (offset, totalNumTests, onRestart, onRetry, onSkip) {
        ui = $('<div></div>');
        current = $('<span />').addClass('progress').text(offset);
        restartBtn = $('<button />').text('Restart').on('click', onRestart);
        retryBtn = $('<button />').text('Retry').on('click', onRetry).hide();
        skipBtn = $('<button />').text('Skip').on('click', onSkip).hide();
        ui.append($('<div />')
            .append($('<span />').text('Suite progress: '))
            .append(current)
            .append($('<span />').text('/'))
            .append($('<span />').text(totalNumTests))
            .append('&nbsp;&nbsp;&nbsp;')
            .append(restartBtn)
            .append('&nbsp;&nbsp;&nbsp;')
            .append(retryBtn)
            .append('&nbsp;&nbsp;&nbsp;')
            .append(skipBtn));
        container.append(ui);
    };
    var done = function (totalTime) {
        ui.append('<div class="done">Test run completed in <span class="time">' + totalTime + '</span></div>');
        $('.passed.hidden,.skipped.hidden').removeClass('hidden');
    };
    var test = function () {
        var el;
        var marker;
        var errorContainer;
        var time;
        var start = function (file, name) {
            el = $('<div />').addClass('test running');
            var output = $('<div />').addClass('output');
            var testfile = $('<span />').text(file).addClass('testfile');
            var nameSpan = $('<span />').text(name).addClass('name');
            marker = $('<span />').text('[running]').addClass('result');
            errorContainer = $('<span />').addClass('error-container');
            time = $('<span />').addClass('time');
            output.append(marker, ' ', nameSpan, ' [', time, '] ', errorContainer, ' ', testfile);
            el.append(output);
            ui.append(el);
        };
        var pass = function (testTime, currentCount) {
            el.removeClass('running').addClass('passed').addClass('hidden');
            marker.text('[passed]').addClass('passed');
            time.text(testTime);
            current.text(currentCount);
        };
        var skip = function (testTime, currentCount) {
            el.removeClass('running').addClass('skipped').addClass('hidden');
            marker.text('[skipped]').addClass('skipped');
            time.text(testTime);
            current.text(currentCount);
        };
        var fail = function (e, testTime, currentCount) {
            el.removeClass('running').addClass('failed');
            marker.text('[failed]').addClass('failed');
            // Don't use .text() as it strips out newlines in IE, even when used
            // on a pre tag.
            var htmlError = Reporter.html(e);
            var pre = $('<pre/>')
                .addClass('error')
                .html(htmlError);
            errorContainer.append(pre);
            time.text(testTime);
            current.text(currentCount);
            if (stopOnFailure) {
                current.text('\u274c @ ' + current.text());
                retryBtn.show();
                skipBtn.show();
            }
        };
        return {
            start: start,
            pass: pass,
            skip: skip,
            fail: fail
        };
    };
    var error = function (error) {
        var message = Reporter.html(error);
        ui.append("<div class=\"failed\"><pre>".concat(message, "</pre></div>"));
    };
    var setStopOnFailure = function (flag) {
        stopOnFailure = flag;
    };
    return {
        render: render,
        test: test,
        error: error,
        done: done,
        hideSkip: function () { return skipBtn.hide(); },
        showSkip: function () { return skipBtn.show(); },
        hideRetry: function () { return retryBtn.show(); },
        showRetry: function () { return retryBtn.show(); },
        setStopOnFailure: setStopOnFailure
    };
};
//# sourceMappingURL=Ui.js.map