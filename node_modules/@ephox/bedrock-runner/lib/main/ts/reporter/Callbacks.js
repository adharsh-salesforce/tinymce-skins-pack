import { Global } from '@ephox/bedrock-common';
import Promise from '@ephox/wrap-promise-polyfill';
var sendJson = function (url, data) {
    return new Promise(function (onSuccess, onError) {
        $.ajax({
            method: 'post',
            url: url,
            contentType: 'application/json; charset=UTF-8',
            dataType: 'json',
            success: onSuccess,
            error: function (xhr, statusText, e) {
                onError(e);
            },
            data: JSON.stringify(data),
        });
    });
};
var getJson = function (url) {
    return new Promise((function (onSuccess, onError) {
        $.ajax({
            url: url,
            dataType: 'json',
            success: onSuccess,
            error: function (xhr, statusText, e) {
                onError(e);
            }
        });
    }));
};
export var Callbacks = function () {
    var loadHarness = function () {
        return getJson('harness');
    };
    var sendInit = function (session) {
        return sendJson('/tests/init', {
            session: session,
        });
    };
    var sendKeepAlive = function (session) {
        return sendJson('/tests/alive', {
            session: session,
        });
    };
    var sendTestStart = function (session, totalTests, file, name) {
        return sendJson('/tests/start', {
            totalTests: totalTests,
            session: session,
            file: file,
            name: name,
        });
    };
    var sendTestResult = function (session, file, name, passed, time, error, skipped) {
        return sendJson('/tests/result', {
            session: session,
            file: file,
            name: name,
            passed: passed,
            skipped: skipped,
            time: time,
            error: error,
        });
    };
    var sendDone = function (session, error) {
        // webpack makes this available
        var getCoverage = function () { return typeof Global.__coverage__ === 'undefined' ? {} : Global.__coverage__; };
        return sendJson('/tests/done', {
            session: session,
            error: error,
            coverage: getCoverage(),
        });
    };
    return {
        loadHarness: loadHarness,
        sendInit: sendInit,
        sendKeepAlive: sendKeepAlive,
        sendTestStart: sendTestStart,
        sendTestResult: sendTestResult,
        sendDone: sendDone
    };
};
//# sourceMappingURL=Callbacks.js.map