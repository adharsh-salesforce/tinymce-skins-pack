import Promise from '@ephox/wrap-promise-polyfill';
import { ErrorCatcher } from '../errors/ErrorCatcher';
export var load = function (scriptUrl) {
    return new Promise(function (resolve, reject) {
        var script = document.createElement('script');
        script.type = 'text/javascript';
        script.src = scriptUrl;
        // Setup the error catcher to handle syntax errors or similar in the scripts
        var errorCatcher = ErrorCatcher();
        var cleanup = function () {
            script.removeEventListener('load', success);
            script.removeEventListener('error', failure);
            errorCatcher.destroy();
            document.body.removeChild(script);
        };
        var success = function () {
            cleanup();
            resolve();
        };
        var failure = function (e) {
            cleanup();
            if (e instanceof Event) {
                reject(new Error("Failed to load script: ".concat(scriptUrl)));
            }
            else {
                reject(e);
            }
        };
        // Bind the events
        errorCatcher.bind(failure);
        script.addEventListener('load', success);
        script.addEventListener('error', failure);
        // Add the script to the dom to load it
        document.body.appendChild(script);
    });
};
//# sourceMappingURL=TestLoader.js.map