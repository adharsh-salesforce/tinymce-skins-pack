"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mode = exports.go = void 0;
const Attempt_1 = require("./bedrock/core/Attempt");
const Version = require("./bedrock/core/Version");
const RunnerRoutes = require("./bedrock/server/RunnerRoutes");
const Webpack = require("./bedrock/compiler/Webpack");
const ExitCodes_1 = require("./bedrock/util/ExitCodes");
const SettingsResolver = require("./bedrock/core/SettingsResolver");
const go = (bedrockManualSettings) => {
    console.log('bedrock-manual ' + Version.get() + ' starting...');
    const settings = SettingsResolver.resolveAndLog(bedrockManualSettings);
    const basePage = 'src/resources/html/bedrock.html';
    const routes = RunnerRoutes.generate('manual', settings.projectdir, settings.basedir, settings.config, settings.bundler, settings.testfiles, settings.chunk, 0, settings.singleTimeout, true, basePage, settings.coverage, settings.polyfills);
    routes.then(async (runner) => {
        const serveSettings = {
            ...settings,
            // There is no driver for manual mode.
            driver: Attempt_1.Attempt.failed('There is no webdriver for manual mode'),
            master: null,
            runner,
            // sticky session is used by auto mode only
            stickyFirstSession: false,
            // reset mouse position will never work on manual
            skipResetMousePosition: true
        };
        try {
            const service = await Webpack.devserver(serveSettings);
            service.enableHud();
            console.log('bedrock-manual ' + Version.get() + ' available at: http://localhost:' + service.port);
        }
        catch (err) {
            console.error(err);
            process.exit(ExitCodes_1.ExitCodes.failures.error);
        }
    });
};
exports.go = go;
exports.mode = 'forManual';
//# sourceMappingURL=BedrockManual.js.map