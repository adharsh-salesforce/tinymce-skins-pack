"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.printReport = exports.generateReport = void 0;
const chalk = require("chalk");
const cli_highlight_1 = require("cli-highlight");
const numberOfErrorsToPrint = 5;
const highlightDiff = (diff) => (0, cli_highlight_1.highlight)(diff, { language: 'diff' });
const formatExtra = (err) => {
    const e = err.data;
    if (e.logs !== undefined && e.logs.length > 0) {
        return '\n\nLogs:\n' + chalk.gray(e.logs);
    }
    else if (e.stack !== undefined && e.stack.length > 0) {
        return '\n\nStack:\n' + chalk.gray(e.stack);
    }
    else {
        return '';
    }
};
const formatDiff = (actual, expected, comparison) => {
    return `Expected:
${expected}
Actual:
${actual}
Diff:
${highlightDiff(comparison)}`;
};
const formatError = (err) => {
    if (err === null) {
        return '';
    }
    else {
        const data = err.data;
        const message = chalk.red(data.message);
        const diff = data.diff ? '\n' + formatDiff(data.diff.actual, data.diff.expected, data.diff.comparison) : '';
        const extra = formatExtra(err);
        return `${message}${diff}${extra}`;
    }
};
const generateReport = (data) => {
    const results = data.results;
    const failures = results.filter((x) => !x.passed && !x.skipped);
    if (failures.length > 0) {
        const r = [];
        const toShow = failures.slice(0, numberOfErrorsToPrint);
        const line = '-------------------------------------------------------------------------------';
        toShow.forEach((f) => {
            r.push(line);
            r.push(`Test failed: ${f.name} (${f.file})`);
            r.push(formatError(f.error));
            r.push('');
        });
        r.push(line);
        if (failures.length > numberOfErrorsToPrint) {
            const remaining = failures.length - numberOfErrorsToPrint;
            r.push(`+ ${remaining} additional failure${remaining === 1 ? '' : 's'} not shown.`);
            r.push('');
        }
        return r.join('\n');
    }
    else {
        return '';
    }
};
exports.generateReport = generateReport;
const printReport = (data) => {
    const message = (0, exports.generateReport)(data);
    if (message !== '') {
        console.error(message);
    }
};
exports.printReport = printReport;
//# sourceMappingURL=ConsoleReporter.js.map