import { ErrorData } from '@ephox/bedrock-common';
export interface TestErrorData {
    readonly data: ErrorData;
    readonly text: string;
}
export interface TestResult {
    readonly name: string;
    readonly file: string;
    readonly passed: boolean;
    readonly time: string;
    readonly skipped: string;
    readonly error: TestErrorData | null;
}
export interface TestResults {
    readonly message?: string;
    readonly results: TestResult[];
    readonly start: number;
    readonly now: number;
}
export interface Controller {
    readonly enableHud: () => void;
    readonly recordAlive: (sessionId: string) => void;
    readonly recordTestStart: (id: string, name: string, file: string, totalTests: number) => void;
    readonly recordTestResult: (id: string, name: string, file: string, passed: boolean, time: string, error: TestErrorData | null, skipped: string) => void;
    readonly recordDone: (id: string, error?: string) => void;
    readonly awaitDone: () => Promise<TestResults>;
}
export declare const create: (stickyFirstSession: boolean, singleTimeout: number, overallTimeout: number, testfiles: string[], loglevel: 'simple' | 'advanced') => Controller;
