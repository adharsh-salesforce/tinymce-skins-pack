"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.jsonBodyMatch = exports.queryMatch = exports.headersMatch = exports.pathMatch = exports.urlMatch = exports.methodMatch = exports.prefixMatch = void 0;
const url = require("url");
const Cmp = require("../util/Cmp");
const Obj = require("../util/Obj");
const prefixMatch = (prefix) => {
    return (request) => {
        return request.url !== undefined && request.url.indexOf(prefix) === 0;
    };
};
exports.prefixMatch = prefixMatch;
const methodMatch = (method) => {
    return (request) => {
        return request.method === method.toUpperCase();
    };
};
exports.methodMatch = methodMatch;
const urlMatch = (url) => {
    return (request) => {
        return request.url === url;
    };
};
exports.urlMatch = urlMatch;
const pathMatch = (path) => {
    return (request) => {
        return url.parse(request.originalUrl).pathname === path;
    };
};
exports.pathMatch = pathMatch;
const headersMatch = (headers) => {
    const lcHeaders = Obj.toLowerCaseKeys(headers);
    return (request) => {
        return Cmp.hasAllOf(Obj.toLowerCaseKeys(request.headers), lcHeaders);
    };
};
exports.headersMatch = headersMatch;
const queryMatch = (query) => {
    return (request) => {
        const reqQuery = url.parse(request.originalUrl, true).query;
        return Cmp.hasAllOf(reqQuery, query);
    };
};
exports.queryMatch = queryMatch;
const jsonBodyMatch = (json) => {
    return (request) => {
        const data = request.body ? JSON.parse(request.body) : {};
        return Cmp.deepEq(json, data);
    };
};
exports.jsonBodyMatch = jsonBodyMatch;
//# sourceMappingURL=Matchers.js.map