"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.executor = void 0;
const EffectUtils = require("./EffectUtils");
const performAction = async (target, type) => {
    const action = {
        type: 'pointer',
        id: 'pointer1',
        parameters: { pointerType: 'mouse' },
        actions: [
            { type, button: 0 },
            { type: 'pause', duration: 10 },
            { type, button: 0 }
        ]
    };
    await target.performActions([action]);
    return target.releaseActions();
};
const doAction = async (target, type) => {
    if (type === 'move') {
        return target.moveTo();
    }
    else if (type === 'down' || type === 'up') {
        await target.moveTo();
        return performAction(target, type === 'down' ? 'pointerDown' : 'pointerUp');
        // MicrosoftEdge does support this, but does not seem to support click in an ActionSequence
    }
    else if (type === 'click') {
        return target.click();
    }
    else {
        return Promise.reject('Unknown mouse effect type: ' + type);
    }
};
const execute = (driver, data) => {
    return EffectUtils.performActionOnTarget(driver, data, (target) => {
        return doAction(target, data.type);
    });
};
const executor = (driver) => {
    return (data) => {
        return execute(driver, data);
    };
};
exports.executor = executor;
//# sourceMappingURL=MouseEffects.js.map