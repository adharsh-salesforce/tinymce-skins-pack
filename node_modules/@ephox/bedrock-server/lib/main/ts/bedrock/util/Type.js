"use strict";
/* eslint-disable @typescript-eslint/ban-types */
Object.defineProperty(exports, "__esModule", { value: true });
exports.isNumber = exports.isFunction = exports.isUndefined = exports.isBoolean = exports.isNull = exports.isArray = exports.isObject = exports.isString = void 0;
const typeOf = (x) => {
    if (x === null) {
        return 'null';
    }
    const t = typeof x;
    if (t === 'object' && (Array.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'Array')) {
        return 'array';
    }
    if (t === 'object' && (String.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'String')) {
        return 'string';
    }
    return t;
};
const isType = (type) => (value) => {
    return typeOf(value) === type;
};
exports.isString = isType('string');
exports.isObject = isType('object');
exports.isArray = isType('array');
exports.isNull = isType('null');
exports.isBoolean = isType('boolean');
exports.isUndefined = isType('undefined');
exports.isFunction = isType('function');
exports.isNumber = isType('number');
//# sourceMappingURL=Type.js.map