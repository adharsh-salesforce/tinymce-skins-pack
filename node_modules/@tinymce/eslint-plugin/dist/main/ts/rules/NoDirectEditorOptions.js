"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.noDirectEditorOptions = void 0;
const EditorUtils_1 = require("../utils/EditorUtils");
const ExtractUtils_1 = require("../utils/ExtractUtils");
const PathUtils_1 = require("../utils/PathUtils");
exports.noDirectEditorOptions = {
    meta: {
        type: 'problem',
        docs: {
            description: 'Disallows editor options from being registered or accessed outside api/Options.ts.'
        },
        messages: {
            noDirectEditorOption: 'Direct access to options is forbidden outside api/Options.ts.',
            noRegisterEditorOption: 'Registering options is forbidden outside api/Options.ts.'
        }
    },
    create: (context) => {
        const filename = (0, PathUtils_1.normalizeFilePath)(context.getFilename());
        // Ignore in tests, demos or Options.ts
        // NOTE: To allow for some legacy setups we currently only enforce `Options.ts` instead of `api/Options.ts`
        if ((0, PathUtils_1.isPathInTest)(filename) || (0, PathUtils_1.isPathInDemo)(filename) || filename.endsWith('/Options.ts')) {
            return {};
        }
        else {
            return {
                CallExpression: (node) => {
                    var _a, _b, _c, _d, _e;
                    const callee = node.callee;
                    if (callee.type === 'MemberExpression' && (0, EditorUtils_1.isEditorMemberExpression)(callee)) {
                        const identifiers = (0, ExtractUtils_1.extractMemberIdentifiers)(callee);
                        if (((_a = identifiers[1]) === null || _a === void 0 ? void 0 : _a.name) === 'options' && ((_b = identifiers[2]) === null || _b === void 0 ? void 0 : _b.name) === 'get' || ((_c = identifiers[1]) === null || _c === void 0 ? void 0 : _c.name) === 'getParam') {
                            context.report({
                                node,
                                messageId: 'noDirectEditorOption'
                            });
                        }
                        else if (((_d = identifiers[1]) === null || _d === void 0 ? void 0 : _d.name) === 'options' && ((_e = identifiers[2]) === null || _e === void 0 ? void 0 : _e.name) === 'register') {
                            context.report({
                                node,
                                messageId: 'noRegisterEditorOption'
                            });
                        }
                    }
                }
            };
        }
    }
};
//# sourceMappingURL=NoDirectEditorOptions.js.map